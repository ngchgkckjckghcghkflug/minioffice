name: Build Minimal LibreOffice

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    runs-on: ubuntu-24.04  # Use newer Ubuntu with GCC 13
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Free up disk space
      run: |
        df -h  # Show available space
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        
        # Install newer GCC if needed (for Ubuntu 22.04)
        if [ "$(lsb_release -rs)" = "22.04" ]; then
          echo "Installing GCC 12 for Ubuntu 22.04..."
          sudo apt-get install -y gcc-12 g++-12
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 100
          sudo update-alternatives --set gcc /usr/bin/gcc-12
          sudo update-alternatives --set g++ /usr/bin/g++-12
        fi
        
        # Verify GCC version
        gcc --version
        
        # Method 1: Try with build-dep (more reliable)
        if sudo sed -i 's/^# deb-src/deb-src/' /etc/apt/sources.list && sudo apt-get update; then
          echo "Using build-dep method..."
          sudo apt-get build-dep -y libreoffice || true
        fi
        
        # Method 2: Manual dependency installation (fallback)
        echo "Installing manual dependencies..."
        sudo apt-get install -y \
          build-essential git zip ccache ant autoconf \
          pkg-config nasm graphviz python3 python3-dev \
          gperf bison flex libunwind-dev \
          \
          default-jdk junit4 \
          \
          libkrb5-dev libssl-dev libexpat1-dev \
          libxml2-dev libxslt1-dev libxml2-utils \
          zlib1g-dev libpng-dev libjpeg-dev \
          \
          libfontconfig1-dev libfreetype6-dev \
          libcairo2-dev libpango1.0-dev libglib2.0-dev \
          libgdk-pixbuf2.0-dev libatk1.0-dev \
          \
          libx11-dev libxrandr-dev libxt-dev \
          libgtk-3-dev libcairo-gobject2 \
          \
          libcups2-dev doxygen xsltproc \
          \
          qtbase5-dev libqt5x11extras5-dev || true
          
        # Install missing dependencies that are causing configure errors
        sudo apt-get install -y \
          libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
          libcmis-dev liborcus-dev libmwaw-dev \
          librevenge-dev libetonyek-dev libfreehand-dev \
          libpagemaker-dev libvisio-dev libwpd-dev libwpg-dev \
          libwps-dev libstaroffice-dev \
          libnss3-dev libnspr4-dev \
          || echo "Some optional dependencies not available, will configure accordingly"
    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: libreoffice-build
        max-size: 2G
        
    - name: Clone LibreOffice
      run: |
        git clone --depth 1  -b libreoffice-25-8-2 --single-branch https://github.com/LibreOffice/core.git libreoffice
        cd libreoffice
        # Get essential submodules only
        git submodule update --init --depth 1 \
          dictionaries \
          helpcontent2 \
          translations
        
    - name: Configure LibreOffice build
      run: |
        
        
        echo "=== Starting regular configuration ==="
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        git pull
        ./emsdk install 3.1.46
        ./emsdk activate 3.1.46
        source ./emsdk_env.sh
        cd ..
        cat > configure-build.sh << 'EOF'
        #!/bin/bash
        # Regular LibreOffice build with minimal changes
        cd libreoffice
        ./autogen.sh \
            --disable-debug --enable-sal-log --disable-lpsolve --without-webdav --disable-cve-tests --disable-curl --without-templates  --without-galleries --disable-gio --disable-curl --disable-build-opensymbol --disable-sdremote --disable-sdremote-bluetooth --disable-report-builder --disable-lotuswordpro --disable-gtk3 --disable-gtk4 --disable-qt5 --disable-kf5 --disable-cups --disable-ldap --disable-dbgutil --disable-opencl --disable-breakpad --without-java --disable-python --disable-coinmp --disable-avahi --disable-postgresql-sdbc --disable-firebird-sdbc --disable-crashdump --disable-extension-update --disable-extension-integration --host=wasm32-local-emscripten --disable-gui --disable-online-update --disable-scripting --disable-odk --with-wasm-module=writer --with-package-format=emscripten
        EOF
        
        chmod +x configure-build.sh
        ./configure-build.sh
        
    - name: Build LibreOffice
      run: |
        cd libreoffice
        make
        
    - name: Package LibreOffice installation
      run: |
        cd libreoffice
        
        # Check what was actually built
        echo "=== Checking build output ==="
        find . -name "soffice*" -type f | head -10
        ls -la instdir/ || echo "No instdir found"
        
        # Create complete package
        mkdir -p libreoffice-build
        
        # Copy the full installation
        if [ -d "instdir" ]; then
          echo "Copying full LibreOffice installation..."
          cp -r instdir/* libreoffice-build/
        else
          echo "ERROR: Could not find instdir"
          exit 1
        fi
        
        # Create conversion script for convenience
        cat > libreoffice-build/convert.sh << 'EOF'
        #!/bin/bash
        SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
        export LD_LIBRARY_PATH="$SCRIPT_DIR/program:$LD_LIBRARY_PATH"
        
        if [ $# -lt 2 ]; then
          echo "Usage: $0 <input_file> <output_directory>"
          echo "Converts documents using LibreOffice headless mode"
          exit 1
        fi
        
        INPUT_FILE="$1"
        OUTPUT_DIR="$2"
        
        # Validate input
        if [ ! -f "$INPUT_FILE" ]; then
          echo "Error: Input file '$INPUT_FILE' not found"
          exit 1
        fi
        
        if [ ! -d "$OUTPUT_DIR" ]; then
          mkdir -p "$OUTPUT_DIR" || {
            echo "Error: Cannot create output directory '$OUTPUT_DIR'"
            exit 1
          }
        fi
        
        # Convert with headless mode
        "$SCRIPT_DIR/program/soffice" \
          --headless \
          --convert-to pdf \
          --outdir "$OUTPUT_DIR" \
          "$INPUT_FILE"
        EOF
        chmod +x libreoffice-build/convert.sh
        
        # Create archive
        echo "=== Creating archive ==="
        tar -czf libreoffice-build.tar.gz libreoffice-build/
        
        # Show final sizes
        echo "=== Final package size ==="
        ls -lh libreoffice-build.tar.gz
        du -sh libreoffice-build/
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: minimal-libreoffice
        path: libreoffice/libreoffice-build.tar.gz
        retention-days: 30
        
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: libreoffice/libreoffice-build.tar.gz
        body: |
          Minimal LibreOffice build for DOCX to PDF conversion.
          
          Usage:
          ```bash
          tar -xzf minimal-libreoffice.tar.gz
          ./minimal-libreoffice/convert.sh input.docx output_directory/
          ```
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
